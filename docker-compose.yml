services:
  app:
    build: .
    container_name: python_app
    depends_on:
      - mqtt_broker
    environment:
      - MQTT_BROKER=mqtt_broker
      

  zookeeper:
        image: zookeeper:3.4.9
        restart: unless-stopped
        hostname: zookeeper
        container_name: zookeeper
        ports:
          - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_PORT: 2181
            ZOO_SERVERS: server.1=zookeeper:2888:3888
  kafka:
        image: confluentinc/cp-kafka:5.1.0
        hostname: kafka
        container_name: kafka
        ports:
          - "9092:9092"
        environment:
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
          KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
          - zookeeper

  kafka-connect:
        image: confluentinc/cp-kafka-connect:5.1.0
        hostname: kafka-connect
        container_name: kafka-connect
        ports:
          - "8083:8083"
        environment:
          CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
          CONNECT_REST_ADVERTISED_HOST_NAME: connect
          CONNECT_REST_PORT: 8083
          CONNECT_GROUP_ID: compose-connect-group
          CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
          CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
          CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
          CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
          CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
        volumes:
          - ./jars/:/etc/kafka-connect/jars
  mqtt_broker:
    image: eclipse-mosquitto
    container_name: mqtt_broker
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
        

  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mbti
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql-init/mbti_labels.csv:/data/mbti_labels.csv
    command: --secure-file-priv=/data

  jobmanager:
    image: flink:1.17.1
    container_name: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        metrics.reporters: prom
        metrics.reporter.prom.factory.class:org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9091
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
      - ./jars_flink/flink-sql-connector-mysql-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-mysql-cdc-2.4.1.jar
      - ./jars_flink/flink-connector-jdbc-3.1.0-1.17.jar:/opt/flink/lib/flink-connector-jdbc-3.1.0-1.17.jar
      - ./jars_flink/flink-connector-redis-1.3.0-jar-with-dependencies.jar:/opt/flink/lib/flink-connector-redis-1.3.0-jar-with-dependencies.jar
      - ./jars_flink/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar:/opt/flink/lib/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar
      - ./jars_flink/flink-sql-connector-kafka-3.1.0-1.17.jar:/opt/flink/lib/flink-sql-connector-kafka-3.1.0-1.17.jar
      - ./jars_flink/flink-json-1.17.1.jar:/opt/flink/lib/flink-json-1.17.1.jar
      #- ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
      #- ./jars_flink/elasticsearch-rest-high-level-client-7.17.3.jar:/opt/flink/lib/elasticsearch-rest-high-level-client-7.17.3.jar
      #- ./jars_flink/elasticsearch-7.17.3.jar:/opt/flink/lib/elasticsearch-7.17.3.jar

      
  taskmanager:
      image: flink:1.17.1
      container_name: taskmanager
      environment:
        - |
          FLINK_PROPERTIES=
          jobmanager.rpc.address: jobmanager
          metrics.reporters: prom
          metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
          metrics.reporter.prom.port: 9091
      depends_on:
        - jobmanager
      command: taskmanager
      volumes:
        - ./jars_flink/flink-sql-connector-mysql-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-mysql-cdc-2.4.1.jar
        - ./jars_flink/flink-connector-jdbc-3.1.0-1.17.jar:/opt/flink/lib/flink-connector-jdbc-3.1.0-1.17.jar
        - ./jars_flink/flink-connector-redis-1.3.0-jar-with-dependencies.jar:/opt/flink/lib/flink-connector-redis-1.3.0-jar-with-dependencies.jar
        - ./jars_flink/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar:/opt/flink/lib/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar
        - ./jars_flink/flink-sql-connector-kafka-3.1.0-1.17.jar:/opt/flink/lib/flink-sql-connector-kafka-3.1.0-1.17.jar
        - ./jars_flink/flink-json-1.17.1.jar:/opt/flink/lib/flink-json-1.17.1.jar
        #- ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
        #- ./jars_flink/elasticsearch-rest-high-level-client-7.17.3.jar:/opt/flink/lib/elasticsearch-rest-high-level-client-7.17.3.jar
        #- ./jars_flink/elasticsearch-7.17.3.jar:/opt/flink/lib/elasticsearch-7.17.3.jar



  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
      container_name: elasticsearch
      environment:
        - cluster.name=docker-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
        - xpack.security.enabled=false
        - cluster.routing.allocation.disk.threshold_enabled=false
      ports:
        - "9200:9200"
        - "9300:9300"
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536

  kibana:
      image: docker.elastic.co/kibana/kibana:7.6.0
      container_name: kibana
      ports:
        - "5601:5601"

